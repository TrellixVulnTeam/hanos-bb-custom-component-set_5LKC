"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const joi_1 = __importDefault(require("joi"));
const constants_1 = require("../constants");
const refSchema = joi_1.default.when('type', {
    is: 'ACTION',
    then: joi_1.default.object({
        value: joi_1.default.string().required(),
    }).when('value', {
        not: joi_1.default.exist(),
        then: joi_1.default.required(),
    }),
    otherwise: joi_1.default.forbidden(),
});
const optionConfigurationSchema = joi_1.default.object({
    apiVersion: joi_1.default.string(),
    allowedInput: joi_1.default.array().items(joi_1.default.object({
        name: joi_1.default.string().allow(''),
        value: joi_1.default.string(),
    })),
    allowedTypes: joi_1.default.array().items(joi_1.default.string()),
    as: joi_1.default.string().valid(...constants_1.CONFIGURATION_AS),
    component: joi_1.default.string(),
    condition: joi_1.default.object({
        type: joi_1.default.string().valid(...constants_1.CONDITION_TYPE),
        option: joi_1.default.string(),
        comparator: joi_1.default.string().valid(...constants_1.COMPARATORS),
        value: joi_1.default.any(),
    }),
    dataType: joi_1.default.string(),
    dependsOn: joi_1.default.string(),
    placeholder: joi_1.default.string(),
    modal: joi_1.default.object({
        type: joi_1.default.string().valid(...constants_1.MODAL_TYPE),
        generateCustomModel: joi_1.default.boolean(),
        modelRequired: joi_1.default.boolean(),
    }),
});
exports.optionSchema = joi_1.default.object({
    label: joi_1.default.string().required(),
    key: joi_1.default.string().required(),
    type: joi_1.default.string()
        .valid(...constants_1.OPTIONS)
        .required(),
    configuration: optionConfigurationSchema,
    value: joi_1.default.when('ref', {
        is: joi_1.default.exist(),
        then: joi_1.default.forbidden(),
        otherwise: joi_1.default.any(),
    }),
    ref: refSchema,
});
//# sourceMappingURL=componentOption.js.map