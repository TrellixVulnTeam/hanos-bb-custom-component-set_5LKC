"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const joi_1 = __importDefault(require("joi"));
const constants_1 = require("../constants");
const assignSchema = joi_1.default.object({
    leftHandSide: joi_1.default.string().required(),
    ref: joi_1.default.object({
        path: joi_1.default.array().items(joi_1.default.string()),
    }),
});
exports.actionSchema = joi_1.default.object({
    events: joi_1.default.when('useNewRuntime', {
        is: true,
        then: joi_1.default.array()
            .items(joi_1.default.object({
            kind: joi_1.default.valid(constants_1.EVENT_KIND_NEW_RUNTIME),
            options: joi_1.default.when('kind', {
                switch: [
                    {
                        is: 'authenticate_user',
                        then: joi_1.default.object({
                            authenticationProfileId: joi_1.default.string()
                                .allow('')
                                .required(),
                            ref: joi_1.default.object({
                                username: joi_1.default.string().required(),
                                password: joi_1.default.string().required(),
                                jwtAs: joi_1.default.string().required(),
                            }),
                        }),
                    },
                ],
                otherwise: joi_1.default.forbidden(),
            }),
        }))
            .max(constants_1.MAX_ACTION_EVENTS),
        otherwise: joi_1.default.array()
            .items(joi_1.default.object({
            kind: joi_1.default.valid(...constants_1.EVENT_KIND),
            options: joi_1.default.when('kind', {
                switch: [
                    {
                        is: 'update',
                        then: joi_1.default.object({
                            ref: joi_1.default.object({
                                object: joi_1.default.string().required(),
                            }),
                            assign: joi_1.default.array().items(assignSchema),
                        }),
                    },
                    {
                        is: 'create',
                        then: joi_1.default.object({
                            modelId: joi_1.default.string()
                                .allow('')
                                .required(),
                            assign: joi_1.default.array().items(assignSchema),
                            ref: joi_1.default.object({
                                customModel: joi_1.default.string().required(),
                            }),
                        }),
                    },
                    {
                        is: 'delete',
                        then: joi_1.default.object({
                            ref: joi_1.default.object({
                                object: joi_1.default.string().required(),
                            }),
                        }),
                    },
                    {
                        is: 'action',
                        then: joi_1.default.object({
                            assign: joi_1.default.array().items(assignSchema),
                            ref: joi_1.default.object({
                                modelAction: joi_1.default.string().required(),
                                resultAs: joi_1.default.string(),
                            }),
                        }),
                    },
                ],
                otherwise: joi_1.default.forbidden(),
            }),
        }))
            .max(constants_1.MAX_ACTION_EVENTS),
    }),
    name: joi_1.default.string(),
    options: joi_1.default.object({
        ref: joi_1.default.object({
            result: joi_1.default.string().required(),
        }),
    }),
    useNewRuntime: joi_1.default.boolean().required(),
    ref: joi_1.default.when('useNewRuntime', {
        is: false,
        then: joi_1.default.object({
            id: joi_1.default.string().required(),
            endpointId: joi_1.default.string().required(),
        }),
        otherwise: joi_1.default.object({
            id: joi_1.default.string().required(),
        }),
    }).required(),
});
//# sourceMappingURL=action.js.map