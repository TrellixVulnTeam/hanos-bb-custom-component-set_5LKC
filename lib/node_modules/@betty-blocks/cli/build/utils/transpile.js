"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const generator_1 = __importDefault(require("@babel/generator"));
const parser_1 = require("@babel/parser");
const traverse_1 = __importDefault(require("@babel/traverse"));
const types_1 = require("@babel/types");
const generateInnerCode = (ast, keys) => {
    traverse_1.default(ast, {
        // tslint:disable-next-line: function-name
        ObjectProperty(path) {
            if (keys.includes(path.node.key.name)) {
                const value = generator_1.default(path.node.value).code;
                // Reassigningment is how this kind of traversal works
                // eslint-disable-next-line no-param-reassign
                path.node.value = types_1.stringLiteral(value);
            }
        },
    });
};
exports.default = (code, keys) => {
    const ast = parser_1.parse(code, {
        plugins: ['jsx'],
    });
    generateInnerCode(ast, keys);
    return generator_1.default(ast).code;
};
//# sourceMappingURL=transpile.js.map