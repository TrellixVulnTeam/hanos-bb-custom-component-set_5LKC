"use strict";
/* npm dependencies */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
const chalk_1 = __importDefault(require("chalk"));
const fs_extra_1 = require("fs-extra");
const path_1 = __importDefault(require("path"));
const checkUpdateAvailable_1 = require("./utils/checkUpdateAvailable");
const LIST = [
    'nodemon.json',
    'package.json',
    '.eslintignore',
    '.eslintrc.json',
    '.gitignore',
    '.prettierignore',
    '.prettierrc.json',
];
/* process arguments */
commander_1.default
    .usage('[path]')
    .name('bb components create')
    .parse(process.argv);
const { args } = commander_1.default;
if (args.length === 0) {
    commander_1.default.help();
}
const dest = args[0];
/* execute command */
if (fs_extra_1.existsSync(dest)) {
    throw Error(chalk_1.default.red(`\nCould not create component set: directory (${dest}) already exists.\n`));
}
(() => __awaiter(void 0, void 0, void 0, function* () {
    yield checkUpdateAvailable_1.checkUpdateAvailableCLI();
    try {
        yield fs_extra_1.copy(path_1.default.join(__dirname, '../assets/component-set'), dest);
        Promise.all(LIST.map(fileName => fs_extra_1.move(`${dest}/__${fileName}`, `${dest}/${fileName}`)));
        console.log(chalk_1.default.green(`\nComponent set succesfully created in directory '${dest}'.\n`));
    }
    catch ({ message }) {
        throw Error(chalk_1.default.red(`\nCould not create component set in directory ${dest}: ${message}.\n`));
    }
}))();
//# sourceMappingURL=bb-components-create.js.map