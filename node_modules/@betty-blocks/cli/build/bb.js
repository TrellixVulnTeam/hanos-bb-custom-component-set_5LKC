#!/usr/bin/env node
"use strict";
/* npm dependencies */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
const chalk_1 = __importDefault(require("chalk"));
/* setup */
// eslint-disable-next-line @typescript-eslint/no-var-requires
const { version } = require('../package.json');
const availableCommands = [
    'components',
    'functions',
    'interactions',
    'bundle',
    'help',
];
/* process arguments */
commander_1.default
    .description('Betty Blocks CLI')
    .version(version, '-v, --version')
    .command('components [cmd]', 'manage your component sets')
    .command('functions [cmd]', 'manage your custom functions')
    .command('interactions [cmd]', 'manage your interactions')
    .command('bundle [cmd]', 'manage your vendor bundle')
    .on('command:*', ([command]) => {
    if (!availableCommands.includes(command)) {
        throw new Error(chalk_1.default.red(`\nInvalid command: ${command}\n`));
    }
})
    .parse(process.argv);
//# sourceMappingURL=bb.js.map