"use strict";
/* npm dependencies */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const commander_1 = __importDefault(require("commander"));
const arguments_1 = require("./utils/arguments");
const serveComponentSet_1 = __importDefault(require("./utils/serveComponentSet"));
/* internal dependencies */
/* process arguments */
commander_1.default
    .usage('[path]')
    .name('bb components serve')
    .option('-p, --port [port]', 'Port to listen on.', value => arguments_1.parsePort(value, 5001), 5001)
    .option('--host [host]', 'Host to listen on.', 'localhost')
    .option('--ssl', 'Serve using HTTPS.', false)
    .option('--ssl-key [ssl-key]', 'SSL certificate to use for serving HTTPS.')
    .option('--ssl-cert [ssl-cert]', 'SSL key to use for serving HTTPS.')
    .parse(process.argv);
const options = {
    rootDir: arguments_1.parseDir(commander_1.default.args),
    port: commander_1.default.port,
    host: commander_1.default.host,
    ssl: commander_1.default.ssl,
    sslKey: commander_1.default.sslKey,
    sslCert: commander_1.default.sslCert,
};
/* execute command */
serveComponentSet_1.default(options).then(() => {
    const scheme = options.ssl ? 'https' : 'http';
    const url = `${scheme}://${options.host}:${options.port}`;
    console.info(chalk_1.default.green(`Serving the component set at ${url}`));
}, error => {
    console.error(chalk_1.default.red(`\n${error}\n`));
    process.exit(1);
});
//# sourceMappingURL=bb-components-serve.js.map