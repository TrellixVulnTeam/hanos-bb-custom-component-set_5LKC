"use strict";
/* npm dependencies */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
/* setup */
const availableCommands = [
    'init',
    'login',
    'new',
    'build',
    'publish',
    'validate',
];
/* process arguments */
commander_1.default
    .usage(`<${availableCommands.join('|')}>`)
    .name('bb functions')
    .command('init [identifier]', 'initialize functions project')
    .command('login', 'login using the same credentials as the IDE')
    .command('new', 'Initialize a new function')
    .command('build', 'build functions bundle file of current working directory')
    .command('publish', 'publish functions of current working directory')
    .command('validate', 'validate functions of current working directory')
    .on('command:*', ([command]) => {
    if (!availableCommands.includes(command)) {
        console.error('Invalid command: %s\n', command);
        commander_1.default.outputHelp();
    }
})
    .parse(process.argv);
//# sourceMappingURL=bb-functions.js.map